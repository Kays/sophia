#!/usr/bin/env perl
#                   _     _       
#   ___  ___  _ __ | |__ (_) __ _ 
#  / __|/ _ \| '_ \| '_ \| |/ _` |
#  \__ \ (_) | |_) | | | | | (_| |
#  |___/\___/| .__/|_| |_|_|\__,_|
#  ----------|_|------------------
#
#       sophia Perl IRC bot

package sophia;
use strict;
use warnings;
require 5.10.0;

use FindBin qw($Bin);
use lib qq($Bin/../cpan/lib/perl5);
use lib qq($Bin/../lib);
use lib qq($Bin/../modules);

use API::Log qw(:ALL);
use Constants;
use Getopt::Long;
use Pod::Usage;
use POSIX qw(setsid);
use Protocol::IRC;

use feature qw(switch);


# do not run sophia as root
error_log('sophia', 'Do not run sophia as root.')   if $> == 0;

# for now, sophia does not support Windows
error_log('sophia', 'As of now, sophia does not support Windows.')  if $^O =~ /win/i;


our %BASE = (
    ROOT        => "$Bin/..",
    BIN         => $Bin,
    ETC         => "$Bin/../etc",
    HELP        => "$Bin/../help",
    MODULES     => "$Bin/../modules",
    VAR         => "$Bin/../var",
);

our %CONFIGURATIONS = (
    VERSION         => ['sophia-3.0.0', ''],
    MAIN_CONFIG     => "$BASE{ETC}/sophia.conf",
    MODULES_CONFIG  => "$BASE{ETC}/sophia.modules.conf",
    ACL_DB          => "$BASE{ETC}/sophia.acl.db",
    ALIAS_DB        => "$BASE{ETC}/sophia.alias.db",
    PID             => "$BASE{ETC}/sophia.pid",
    LOAD_ALIASES    => FALSE,
    IN_DEBUG_MODE   => TRUE,
);

my $full_version = `cd $BASE{ROOT} && git log -1 --pretty=format:'${CONFIGURATIONS{VERSION}->[0]} [%H] %cd'`;
if ($full_version)
{
    chomp $full_version;
    $CONFIGURATIONS{VERSION}->[1] = $full_version;
}

# missing config file?
error_log('sophia', 'Missing config file.')     if ! -e $CONFIGURATIONS{MAIN_CONFIG};


my %opts;
GetOptions(
    'config=s'      => \$opts{config},
    'debug|?'       => \$opts{debug},
    'help|?'        => \$opts{help},
    'man'           => \$opts{man},
    'modconfig=s'   => \$opts{modconf},
    'version'       => \$opts{version},
);

if ($opts{version})
{
    print $CONFIGURATIONS{VERSION}->[1] || $CONFIGURATIONS{VERSION}->[0];
    exit;
}

pod2usage(1)    if $opts{help};
pod2usage(
    -exitstatus     => 0,
    -verbose        => 2,
)   if $opts{man};

$CONFIGURATIONS{MAIN_CONFIG} = $opts{config}        if $opts{config} && -e $opts{config};
$CONFIGURATIONS{MODULES_CONFIG} = $opts{modconf}    if $opts{modconf} && -e $opts{modconf};
$CONFIGURATIONS{IN_DEBUG_MODE} = TRUE               if $opts{debug};

my $pid;
unless ($CONFIGURATIONS{IN_DEBUG_MODE})
{
    $pid = fork();
    
    unless ($pid == 0)
    {
        print "sophia forked into the background with pid: $pid\n";
        _log('sophia', "sophia forked into the background with pid: $pid");

        open my $fh, '>', $CONFIGURATIONS{PID}
            or error_log('sophia', 'Unable to open pid file for writing.');
        print {$fh} $pid;
        close $fh;

        exit;
    }

    setsid or error_log('sophia', "sophia cannot start a new session $!");

    open STDIN, '<', '/dev/null'
        or error_log('sophia', "sophia cannot read /dev/null: $!\n");
    open STDOUT, '>>', '/dev/null'
        or error_log('sophia', "sophia cannot write to /dev/null: $!\n");

    # if var/sophia.err does not exist, create it
    if (! -e "$BASE{VAR}/sophia.err")
    {
        open my $fh, '>', "$BASE{VAR}/sophia.err"
            or error_log('sophia', "Unable to create var/sophia.err: $!\n");
        close $fh;
    }

    open STDERR, '>>', "$BASE{VAR}/sophia.err"
        or error_log('sophia', "sophia cannot write to var/sophia.err: $!\n");
}
else
{
    $pid = $$;
}

our $instances = Protocol::IRC->new;
$instances->autoload_connections;

POE::Kernel->run;

__END__
=head1 NAME

sophia - An IRC bot written in Perl.

=head1 SYNOPSIS

sophia [options]

=head1 OPTIONS

=over 8

=item B<--debug>

Enables debug mode.

=item B<--config=<PATH>>

Specify a custom config file.

=item B<--modconf=<PATH>>

Specify a modules config file. 

=item B<--help>

Prints a help message.

=item B<--man>

Prints a full manual page documentation. Alternatively, you can always run: perldoc bin/sophia.

=item B<--version>

Prints sophia's current version.

=back

=head1 DESCRIPTION

sophia is an IRC bot written in Perl. Source code is on github: https://www.github.com/myano/sophia

For more questions or suggestions: ##sophia-dev@chat.freenode.net

sophia is licensed under the Eiffel Forum License, version 2.

=cut
